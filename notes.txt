Cave of Epokothar

Intro story:
The Council of the Open Hand has learned of a plot by the nefarious demon Epokothar. The demon found an artifact of great magical power, called the Cloak of Ehpeway. 
With it, he plans to destroy the peaceful community of Osweb. The Council has chosen you to enter Epokothar's lair to retrieve the Cloak of Ehpeway and save the Oswebians.
Epokothar resides deep within Mount Exsap.


Skills:
combat: fight, unarmed, axe, mace (includes flail?), polearm (includes spear), smallBlade, staff, sword
ranged: bow, crossbow, dart, sling, thrown
defensive: armor, dodge, shield
spells: casting, air, earth, fire, water
other: stealth, search (traps, hidden doors, invisible monsters?)

Tasks:
// Don't include magic armor and weapon bonus in the value against which the skill is multiplied

// Better AI - hear/see player

// drop random loot

// Only identify a potion or magic item if it's effect is obvious (eg, must be poisoned for antidote effect to be obvious)

// Implement stealth & sneak attack

// starving hunger level reduces skills

// Add hidden traps

// Show hints/tips like Stone Soup Crawl

// Add rings - protection, stealth, strength, agility, health, etc.

// Add amulets - sustenance, health, intelligence, etc.

// Make armor take time to wear or remove

// fine-tune balance creatures & weapon accuracy

// hostile monsters can swap places with neutrals (player can too?)

// Look into this tile set: http://www.lostgarden.com/search?q=sprites

Performance research:
1. webkit.compositing.paintGraphicsLayerContents takes ~130ms & webkit.pixmap.create takes ~60ms per turn. That is all related to drawing to the canvas.
2. changing field of view radius has negligible impact
3. using offscreen canvas to hold wall and floor tiles (including shaded versions of both) has negligible impact.
4. not using graphics acceleration (removing translateZ from map-styles) has negligible impact. It removes the pixmap.create hit, but similar time is added to compositing.paintGraphicsLayerContents.
5. making floor tiles be a background image is negligible impact. 
6. disabling MapLevel._renderMap() "fixes" the problem since nothing is drawn to the canvas.
+ using graphics accel for actors (adding translateZ and fixed width and height) is definitely necessary (webkit.compositing.paintGraphicsLayerContents is ~130ms with v ~240ms without)
+ break up the single large canvas into 9 smaller canvases (this resulted in a very significant performance improvement)
- build a list of changes to make and do them in a tight loop (see if that changes drawing perf)


